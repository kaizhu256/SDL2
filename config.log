This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by configure, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  $ ./configure --host=asmjs-unknown-emscripten --disable-assembly --disable-threads --enable-cpuinfo=false CFLAGS=-O2

## --------- ##
## Platform. ##
## --------- ##

hostname = minime2
uname -m = x86_64
uname -r = 13.4.0
uname -s = Darwin
uname -v = Darwin Kernel Version 13.4.0: Wed Mar 18 16:20:14 PDT 2015; root:xnu-2422.115.14~1/RELEASE_X86_64

/usr/bin/uname -p = i386
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = Mach kernel version:
	 Darwin Kernel Version 13.4.0: Wed Mar 18 16:20:14 PDT 2015; root:xnu-2422.115.14~1/RELEASE_X86_64
Kernel configured for up to 4 processors.
2 processors are physically available.
4 processors are logically available.
Processor type: i486 (Intel 80486)
Processors active: 0 1 2 3
Primary memory available: 4.00 gigabytes
Default processor set: 186 tasks, 828 threads, 4 processors
Load average: 1.78, Mach factor: 2.21
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/local/Cellar/emscripten/1.33.0/libexec/system/bin
PATH: /usr/local/heroku/bin
PATH: /Users/kaizhu/bin
PATH: /Users/kaizhu/node_modules/.bin
PATH: /usr/local/bin
PATH: /usr/local/sbin
PATH: /usr/bin
PATH: /bin
PATH: /usr/sbin
PATH: /sbin
PATH: /usr/local/bin
PATH: /opt/X11/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2726: checking build system type
configure:2740: result: x86_64-apple-darwin13.4.0
configure:2760: checking host system type
configure:2773: result: asmjs-unknown-emscripten
configure:2814: checking how to print strings
configure:2841: result: printf
configure:2870: checking for asmjs-unknown-emscripten-gcc
configure:2897: result: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc
configure:3166: checking for C compiler version
configure:3175: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc --version >&5
emcc (Emscripten gcc/clang-like replacement) 1.33.0 (commit 7d7a95b77a330cdcabe3a507516974d39302ed32)
Copyright (C) 2014 the Emscripten authors (see AUTHORS.txt)
This is free and open source software under the MIT license.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  
configure:3186: $? = 0
configure:3175: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -v >&5
emcc (Emscripten gcc/clang-like replacement) 1.33.0
clang version 3.7.0 
Target: x86_64-apple-darwin13.4.0
Thread model: posix
INFO     root: [32m(Emscripten: Running sanity checks)[0m
configure:3186: $? = 0
configure:3175: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -V >&5
ERROR    root: [31mno input files
note that input files without a known suffix are ignored, make sure your input files end with one of: ('.c', '.C', '.i', '.cpp', '.cxx', '.cc', '.c++', '.CPP', '.CXX', '.CC', '.C++', '.ii', '.m', '.mi', '.mm', '.mii', '.bc', '.o', '.obj', '.dylib', '.so', '.a', '.ll', '.h', '.hxx', '.hpp', '.hh', '.H', '.HXX', '.HPP', '.HH')[0m
configure:3186: $? = 0
configure:3175: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -qversion >&5
ERROR    root: [31mno input files
note that input files without a known suffix are ignored, make sure your input files end with one of: ('.c', '.C', '.i', '.cpp', '.cxx', '.cc', '.c++', '.CPP', '.CXX', '.CC', '.C++', '.ii', '.m', '.mi', '.mm', '.mii', '.bc', '.o', '.obj', '.dylib', '.so', '.a', '.ll', '.h', '.hxx', '.hpp', '.hh', '.H', '.HXX', '.HPP', '.HH')[0m
configure:3186: $? = 0
configure:3206: checking whether the C compiler works
configure:3228: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -O2   conftest.c  >&5
configure:3232: $? = 0
configure:3280: result: yes
configure:3283: checking for C compiler default output file name
configure:3285: result: a.out
configure:3291: checking for suffix of executables
configure:3298: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2   conftest.c  >&5
configure:3302: $? = 0
configure:3324: result: 
configure:3346: checking whether we are cross compiling
configure:3354: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2   conftest.c  >&5
configure:3358: $? = 0
configure:3365: ./conftest
configure:3369: $? = 0
configure:3384: result: no
configure:3389: checking for suffix of object files
configure:3411: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:3415: $? = 0
configure:3436: result: o
configure:3440: checking whether we are using the GNU C compiler
configure:3459: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:3459: $? = 0
configure:3468: result: yes
configure:3477: checking whether /usr/local/Cellar/emscripten/1.33.0/libexec/emcc accepts -g
configure:3497: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -g  conftest.c >&5
configure:3497: $? = 0
configure:3538: result: yes
configure:3555: checking for /usr/local/Cellar/emscripten/1.33.0/libexec/emcc option to accept ISO C89
configure:3618: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc  -c -O2  conftest.c >&5
configure:3618: $? = 0
configure:3631: result: none needed
configure:3651: checking for a sed that does not truncate output
configure:3715: result: /usr/bin/sed
configure:3733: checking for grep that handles long lines and -e
configure:3791: result: /usr/bin/grep
configure:3796: checking for egrep
configure:3858: result: /usr/bin/grep -E
configure:3863: checking for fgrep
configure:3925: result: /usr/bin/grep -F
configure:3960: checking for ld used by /usr/local/Cellar/emscripten/1.33.0/libexec/emcc
ERROR    root: [31mno input files
note that input files without a known suffix are ignored, make sure your input files end with one of: ('.c', '.C', '.i', '.cpp', '.cxx', '.cc', '.c++', '.CPP', '.CXX', '.CC', '.C++', '.ii', '.m', '.mi', '.mm', '.mii', '.bc', '.o', '.obj', '.dylib', '.so', '.a', '.ll', '.h', '.hxx', '.hpp', '.hh', '.H', '.HXX', '.HPP', '.HH')[0m
configure:4027: result: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc
configure:4034: checking if the linker (/usr/local/Cellar/emscripten/1.33.0/libexec/emcc) is GNU ld
configure:4049: result: no
configure:4061: checking for BSD- or MS-compatible name lister (nm)
configure:4110: result: no
configure:4124: checking for asmjs-unknown-emscripten-dumpbin
configure:4154: result: no
configure:4124: checking for asmjs-unknown-emscripten-link
configure:4154: result: no
configure:4168: checking for dumpbin
configure:4198: result: no
configure:4168: checking for link
configure:4184: found /bin/link
configure:4195: result: link -dump
configure:4240: checking the name lister (nm) interface
configure:4247: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:4250: nm "conftest.o"
configure:4253: output
configure:4260: result: BSD nm
configure:4263: checking whether ln -s works
configure:4267: result: yes
configure:4275: checking the maximum length of command line arguments
configure:4405: result: 196608
configure:4422: checking whether the shell understands some XSI constructs
configure:4432: result: yes
configure:4436: checking whether the shell understands "+="
configure:4442: result: yes
configure:4477: checking how to convert x86_64-apple-darwin13.4.0 file names to asmjs-unknown-emscripten format
configure:4517: result: func_convert_file_noop
configure:4524: checking how to convert x86_64-apple-darwin13.4.0 file names to toolchain format
configure:4544: result: func_convert_file_noop
configure:4551: checking for /usr/local/Cellar/emscripten/1.33.0/libexec/emcc option to reload object files
configure:4558: result: -r
configure:4592: checking for asmjs-unknown-emscripten-objdump
configure:4622: result: no
configure:4632: checking for objdump
configure:4662: result: no
configure:4688: checking how to recognize dependent libraries
configure:4892: result: unknown
configure:4937: checking for asmjs-unknown-emscripten-dlltool
configure:4967: result: no
configure:4977: checking for dlltool
configure:5007: result: no
configure:5034: checking how to associate runtime and link libraries
configure:5061: result: printf %s\n
configure:5078: checking for asmjs-unknown-emscripten-ar
configure:5105: result: /usr/local/Cellar/emscripten/1.33.0/libexec/emar
configure:5186: checking for archiver @FILE support
configure:5203: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:5203: $? = 0
configure:5206: /usr/local/Cellar/emscripten/1.33.0/libexec/emar cru libconftest.a @conftest.lst >&5
configure:5209: $? = 0
configure:5214: /usr/local/Cellar/emscripten/1.33.0/libexec/emar cru libconftest.a @conftest.lst >&5
/usr/local/opt/emscripten/libexec/llvm/bin/llvm-ar: conftest.o: No such file or directory.
configure:5217: $? = 0
configure:5229: result: no
configure:5247: checking for asmjs-unknown-emscripten-strip
configure:5277: result: no
configure:5287: checking for strip
configure:5303: found /usr/bin/strip
configure:5314: result: strip
configure:5346: checking for asmjs-unknown-emscripten-ranlib
configure:5373: result: /usr/local/Cellar/emscripten/1.33.0/libexec/emranlib
configure:5490: checking for gawk
configure:5520: result: no
configure:5490: checking for mawk
configure:5520: result: no
configure:5490: checking for nawk
configure:5520: result: no
configure:5490: checking for awk
configure:5506: found /usr/bin/awk
configure:5517: result: awk
configure:5557: checking command to parse nm output from /usr/local/Cellar/emscripten/1.33.0/libexec/emcc object
configure:5677: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:5680: $? = 0
configure:5684: nm conftest.o \| sed -n -e 's/^.*[ ]\([BCDEGRST][BCDEGRST]*\)[ ][ ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p' | sed '/ __gnu_lto/d' \> conftest.nm
configure:5687: $? = 0
cannot run sed -n -e 's/^.*[	 ]\([BCDEGRST][BCDEGRST]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p' | sed '/ __gnu_lto/d'
configure:5677: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:5680: $? = 0
configure:5684: nm conftest.o \| sed -n -e 's/^.*[ ]\([BCDEGRST][BCDEGRST]*\)[ ][ ]*_\([_A-Za-z][_A-Za-z0-9]*\)$/\1 _\2 \2/p' | sed '/ __gnu_lto/d' \> conftest.nm
configure:5687: $? = 0
cannot run sed -n -e 's/^.*[	 ]\([BCDEGRST][BCDEGRST]*\)[	 ][	 ]*_\([_A-Za-z][_A-Za-z0-9]*\)$/\1 _\2 \2/p' | sed '/ __gnu_lto/d'
configure:5791: result: failed
configure:5831: checking for sysroot
configure:5861: result: no
configure:6077: checking for asmjs-unknown-emscripten-mt
configure:6107: result: no
configure:6117: checking for mt
configure:6147: result: no
configure:6167: checking if : is a manifest tool
configure:6173: : '-?'
configure:6181: result: no
configure:6823: checking how to run the C preprocessor
configure:6854: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -E  conftest.c
configure:6854: $? = 0
configure:6868: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -E  conftest.c
conftest.c:9:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^
1 error generated.
configure:6868: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:6893: result: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -E
configure:6913: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -E  conftest.c
configure:6913: $? = 0
configure:6927: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -E  conftest.c
conftest.c:9:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^
1 error generated.
configure:6927: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:6956: checking for ANSI C header files
configure:6976: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:6976: $? = 0
configure:7049: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2   conftest.c  >&5
configure:7049: $? = 0
configure:7049: ./conftest
configure:7049: $? = 0
configure:7060: result: yes
configure:7073: checking for sys/types.h
configure:7073: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:7073: $? = 0
configure:7073: result: yes
configure:7073: checking for sys/stat.h
configure:7073: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:7073: $? = 0
configure:7073: result: yes
configure:7073: checking for stdlib.h
configure:7073: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:7073: $? = 0
configure:7073: result: yes
configure:7073: checking for string.h
configure:7073: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:7073: $? = 0
configure:7073: result: yes
configure:7073: checking for memory.h
configure:7073: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:7073: $? = 0
configure:7073: result: yes
configure:7073: checking for strings.h
configure:7073: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:7073: $? = 0
configure:7073: result: yes
configure:7073: checking for inttypes.h
configure:7073: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:7073: $? = 0
configure:7073: result: yes
configure:7073: checking for stdint.h
configure:7073: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:7073: $? = 0
configure:7073: result: yes
configure:7073: checking for unistd.h
configure:7073: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:7073: $? = 0
configure:7073: result: yes
configure:7087: checking for dlfcn.h
configure:7087: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  conftest.c >&5
configure:7087: $? = 0
configure:7087: result: yes
configure:7591: checking for objdir
configure:7606: result: .libs
configure:7877: checking if /usr/local/Cellar/emscripten/1.33.0/libexec/emcc supports -fno-rtti -fno-exceptions
configure:7895: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  -fno-rtti -fno-exceptions conftest.c >&5
configure:7899: $? = 0
configure:7912: result: yes
configure:8239: checking for /usr/local/Cellar/emscripten/1.33.0/libexec/emcc option to produce PIC
configure:8246: result: -fPIC -DPIC
configure:8254: checking if /usr/local/Cellar/emscripten/1.33.0/libexec/emcc PIC flag -fPIC -DPIC works
configure:8272: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  -fPIC -DPIC -DPIC conftest.c >&5
configure:8276: $? = 0
configure:8289: result: yes
configure:8318: checking if /usr/local/Cellar/emscripten/1.33.0/libexec/emcc static flag -static works
configure:8346: result: yes
configure:8361: checking if /usr/local/Cellar/emscripten/1.33.0/libexec/emcc supports -c -o file.o
configure:8382: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2  -o out/conftest2.o conftest.c >&5
configure:8386: $? = 0
configure:8408: result: yes
configure:8416: checking if /usr/local/Cellar/emscripten/1.33.0/libexec/emcc supports -c -o file.o
configure:8463: result: yes
configure:8496: checking whether the /usr/local/Cellar/emscripten/1.33.0/libexec/emcc linker (/usr/local/Cellar/emscripten/1.33.0/libexec/emcc) supports shared libraries
configure:9649: result: no
configure:9889: checking dynamic linker characteristics
configure:10624: result: no
configure:10731: checking how to hardcode library paths into programs
configure:10756: result: unsupported
configure:11296: checking whether stripping libraries is possible
configure:11318: result: no
configure:11336: checking if libtool supports shared libraries
configure:11338: result: no
configure:11341: checking whether to build shared libraries
configure:11362: result: no
configure:11365: checking whether to build static libraries
configure:11369: result: yes
configure:11428: checking for asmjs-unknown-emscripten-gcc
configure:11455: result: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc
configure:11724: checking for C compiler version
configure:11733: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc --version >&5
emcc (Emscripten gcc/clang-like replacement) 1.33.0 (commit 7d7a95b77a330cdcabe3a507516974d39302ed32)
Copyright (C) 2014 the Emscripten authors (see AUTHORS.txt)
This is free and open source software under the MIT license.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  
configure:11744: $? = 0
configure:11733: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -v >&5
emcc (Emscripten gcc/clang-like replacement) 1.33.0
clang version 3.7.0 
Target: x86_64-apple-darwin13.4.0
Thread model: posix
INFO     root: [32m(Emscripten: Running sanity checks)[0m
configure:11744: $? = 0
configure:11733: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -V >&5
ERROR    root: [31mno input files
note that input files without a known suffix are ignored, make sure your input files end with one of: ('.c', '.C', '.i', '.cpp', '.cxx', '.cc', '.c++', '.CPP', '.CXX', '.CC', '.C++', '.ii', '.m', '.mi', '.mm', '.mii', '.bc', '.o', '.obj', '.dylib', '.so', '.a', '.ll', '.h', '.hxx', '.hpp', '.hh', '.H', '.HXX', '.HPP', '.HH')[0m
configure:11744: $? = 0
configure:11733: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -qversion >&5
ERROR    root: [31mno input files
note that input files without a known suffix are ignored, make sure your input files end with one of: ('.c', '.C', '.i', '.cpp', '.cxx', '.cc', '.c++', '.CPP', '.CXX', '.CC', '.C++', '.ii', '.m', '.mi', '.mm', '.mii', '.bc', '.o', '.obj', '.dylib', '.so', '.a', '.ll', '.h', '.hxx', '.hpp', '.hh', '.H', '.HXX', '.HPP', '.HH')[0m
configure:11744: $? = 0
configure:11748: checking whether we are using the GNU C compiler
configure:11776: result: yes
configure:11785: checking whether /usr/local/Cellar/emscripten/1.33.0/libexec/emcc accepts -g
configure:11846: result: yes
configure:11863: checking for /usr/local/Cellar/emscripten/1.33.0/libexec/emcc option to accept ISO C89
configure:11939: result: none needed
configure:12071: checking for C++ compiler version
configure:12080: /usr/local/Cellar/emscripten/1.33.0/libexec/em++ --version >&5
emcc (Emscripten gcc/clang-like replacement) 1.33.0 (commit 7d7a95b77a330cdcabe3a507516974d39302ed32)
Copyright (C) 2014 the Emscripten authors (see AUTHORS.txt)
This is free and open source software under the MIT license.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  
configure:12091: $? = 0
configure:12080: /usr/local/Cellar/emscripten/1.33.0/libexec/em++ -v >&5
emcc (Emscripten gcc/clang-like replacement) 1.33.0
clang version 3.7.0 
Target: x86_64-apple-darwin13.4.0
Thread model: posix
INFO     root: [32m(Emscripten: Running sanity checks)[0m
configure:12091: $? = 0
configure:12080: /usr/local/Cellar/emscripten/1.33.0/libexec/em++ -V >&5
ERROR    root: [31mno input files
note that input files without a known suffix are ignored, make sure your input files end with one of: ('.c', '.C', '.i', '.cpp', '.cxx', '.cc', '.c++', '.CPP', '.CXX', '.CC', '.C++', '.ii', '.m', '.mi', '.mm', '.mii', '.bc', '.o', '.obj', '.dylib', '.so', '.a', '.ll', '.h', '.hxx', '.hpp', '.hh', '.H', '.HXX', '.HPP', '.HH')[0m
configure:12091: $? = 0
configure:12080: /usr/local/Cellar/emscripten/1.33.0/libexec/em++ -qversion >&5
ERROR    root: [31mno input files
note that input files without a known suffix are ignored, make sure your input files end with one of: ('.c', '.C', '.i', '.cpp', '.cxx', '.cc', '.c++', '.CPP', '.CXX', '.CC', '.C++', '.ii', '.m', '.mi', '.mm', '.mii', '.bc', '.o', '.obj', '.dylib', '.so', '.a', '.ll', '.h', '.hxx', '.hpp', '.hh', '.H', '.HXX', '.HPP', '.HH')[0m
configure:12091: $? = 0
configure:12095: checking whether we are using the GNU C++ compiler
configure:12114: /usr/local/Cellar/emscripten/1.33.0/libexec/em++ -c   conftest.cpp >&5
configure:12114: $? = 0
configure:12123: result: yes
configure:12132: checking whether /usr/local/Cellar/emscripten/1.33.0/libexec/em++ accepts -g
configure:12152: /usr/local/Cellar/emscripten/1.33.0/libexec/em++ -c -g  conftest.cpp >&5
configure:12152: $? = 0
configure:12193: result: yes
configure:12234: checking how to run the C++ preprocessor
configure:12261: /usr/local/Cellar/emscripten/1.33.0/libexec/em++ -E  conftest.cpp
configure:12261: $? = 0
configure:12275: /usr/local/Cellar/emscripten/1.33.0/libexec/em++ -E  conftest.cpp
conftest.cpp:21:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^
1 error generated.
configure:12275: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:12300: result: /usr/local/Cellar/emscripten/1.33.0/libexec/em++ -E
configure:12320: /usr/local/Cellar/emscripten/1.33.0/libexec/em++ -E  conftest.cpp
configure:12320: $? = 0
configure:12334: /usr/local/Cellar/emscripten/1.33.0/libexec/em++ -E  conftest.cpp
conftest.cpp:21:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^
1 error generated.
configure:12334: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:12503: checking for ld used by /usr/local/Cellar/emscripten/1.33.0/libexec/em++
ERROR    root: [31mno input files
note that input files without a known suffix are ignored, make sure your input files end with one of: ('.c', '.C', '.i', '.cpp', '.cxx', '.cc', '.c++', '.CPP', '.CXX', '.CC', '.C++', '.ii', '.m', '.mi', '.mm', '.mii', '.bc', '.o', '.obj', '.dylib', '.so', '.a', '.ll', '.h', '.hxx', '.hpp', '.hh', '.H', '.HXX', '.HPP', '.HH')[0m
configure:12570: result: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc
configure:12577: checking if the linker (/usr/local/Cellar/emscripten/1.33.0/libexec/emcc) is GNU ld
configure:12592: result: no
configure:12647: checking whether the /usr/local/Cellar/emscripten/1.33.0/libexec/em++ linker (/usr/local/Cellar/emscripten/1.33.0/libexec/emcc) supports shared libraries
configure:13652: result: no
configure:13688: /usr/local/Cellar/emscripten/1.33.0/libexec/em++ -c -g -O2  conftest.cpp >&5
configure:13691: $? = 0
configure:14211: checking for /usr/local/Cellar/emscripten/1.33.0/libexec/em++ option to produce PIC
configure:14218: result: -fPIC -DPIC
configure:14226: checking if /usr/local/Cellar/emscripten/1.33.0/libexec/em++ PIC flag -fPIC -DPIC works
configure:14244: /usr/local/Cellar/emscripten/1.33.0/libexec/em++ -c -g -O2  -fPIC -DPIC -DPIC conftest.cpp >&5
configure:14248: $? = 0
configure:14261: result: yes
configure:14284: checking if /usr/local/Cellar/emscripten/1.33.0/libexec/em++ static flag -static works
configure:14312: result: yes
configure:14324: checking if /usr/local/Cellar/emscripten/1.33.0/libexec/em++ supports -c -o file.o
configure:14345: /usr/local/Cellar/emscripten/1.33.0/libexec/em++ -c -g -O2  -o out/conftest2.o conftest.cpp >&5
configure:14349: $? = 0
configure:14371: result: yes
configure:14376: checking if /usr/local/Cellar/emscripten/1.33.0/libexec/em++ supports -c -o file.o
configure:14423: result: yes
configure:14453: checking whether the /usr/local/Cellar/emscripten/1.33.0/libexec/em++ linker (/usr/local/Cellar/emscripten/1.33.0/libexec/emcc) supports shared libraries
configure:14489: result: no
configure:14630: checking dynamic linker characteristics
configure:15299: result: no
configure:15352: checking how to hardcode library paths into programs
configure:15377: result: unsupported
configure:15431: checking for a BSD-compatible install
configure:15499: result: /usr/bin/install -c
configure:15510: checking whether make sets $(MAKE)
configure:15532: result: yes
configure:15544: checking for asmjs-unknown-emscripten-windres
configure:15574: result: no
configure:15584: checking for windres
configure:15614: result: no
configure:15740: checking for an ANSI C-conforming const
configure:15806: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:15806: $? = 0
configure:15813: result: yes
configure:15821: checking for inline
configure:15837: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:15837: $? = 0
configure:15845: result: inline
configure:15863: checking for working volatile
configure:15882: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:15882: $? = 0
configure:15889: result: yes
configure:15942: checking for GCC -MMD -MT option
configure:15960: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:15960: $? = 0
configure:15966: result: yes
configure:15974: checking for linker option --no-undefined
configure:15997: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    -Wl,--no-undefined conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:15997: $? = 0
configure:16008: result: yes
configure:16023: checking for ANSI C header files
configure:16127: result: yes
configure:16138: checking for sys/types.h
configure:16138: result: yes
configure:16138: checking stdio.h usability
configure:16138: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16138: $? = 0
configure:16138: result: yes
configure:16138: checking stdio.h presence
configure:16138: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -E  -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c
configure:16138: $? = 0
configure:16138: result: yes
configure:16138: checking for stdio.h
configure:16138: result: yes
configure:16138: checking for stdlib.h
configure:16138: result: yes
configure:16138: checking stddef.h usability
configure:16138: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16138: $? = 0
configure:16138: result: yes
configure:16138: checking stddef.h presence
configure:16138: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -E  -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c
configure:16138: $? = 0
configure:16138: result: yes
configure:16138: checking for stddef.h
configure:16138: result: yes
configure:16138: checking stdarg.h usability
configure:16138: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16138: $? = 0
configure:16138: result: yes
configure:16138: checking stdarg.h presence
configure:16138: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -E  -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c
configure:16138: $? = 0
configure:16138: result: yes
configure:16138: checking for stdarg.h
configure:16138: result: yes
configure:16138: checking malloc.h usability
configure:16138: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16138: $? = 0
configure:16138: result: yes
configure:16138: checking malloc.h presence
configure:16138: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -E  -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c
configure:16138: $? = 0
configure:16138: result: yes
configure:16138: checking for malloc.h
configure:16138: result: yes
configure:16138: checking for memory.h
configure:16138: result: yes
configure:16138: checking for string.h
configure:16138: result: yes
configure:16138: checking for strings.h
configure:16138: result: yes
configure:16138: checking for inttypes.h
configure:16138: result: yes
configure:16138: checking for stdint.h
configure:16138: result: yes
configure:16138: checking ctype.h usability
configure:16138: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16138: $? = 0
configure:16138: result: yes
configure:16138: checking ctype.h presence
configure:16138: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -E  -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c
configure:16138: $? = 0
configure:16138: result: yes
configure:16138: checking for ctype.h
configure:16138: result: yes
configure:16138: checking math.h usability
configure:16138: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16138: $? = 0
configure:16138: result: yes
configure:16138: checking math.h presence
configure:16138: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -E  -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c
configure:16138: $? = 0
configure:16138: result: yes
configure:16138: checking for math.h
configure:16138: result: yes
configure:16138: checking iconv.h usability
configure:16138: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16138: $? = 0
configure:16138: result: yes
configure:16138: checking iconv.h presence
configure:16138: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -E  -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c
configure:16138: $? = 0
configure:16138: result: yes
configure:16138: checking for iconv.h
configure:16138: result: yes
configure:16138: checking signal.h usability
configure:16138: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16138: $? = 0
configure:16138: result: yes
configure:16138: checking signal.h presence
configure:16138: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -E  -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c
configure:16138: $? = 0
configure:16138: result: yes
configure:16138: checking for signal.h
configure:16138: result: yes
configure:16149: checking for size_t
configure:16149: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16149: $? = 0
configure:16149: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:74:21: error: expected expression
if (sizeof ((size_t)))
                    ^
1 error generated.
ERROR    root: [31mcompiler frontend failed to generate LLVM bitcode, halting[0m
configure:16149: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBC 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_STDARG_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRING_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_CTYPE_H 1
| #define HAVE_MATH_H 1
| #define HAVE_ICONV_H 1
| #define HAVE_SIGNAL_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| if (sizeof ((size_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:16149: result: yes
configure:16161: checking for M_PI in math.h
configure:16185: result: yes
configure:16200: checking for working alloca.h
configure:16217: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16217: $? = 0
configure:16225: result: yes
configure:16233: checking for alloca
configure:16270: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16270: $? = 0
configure:16278: result: yes
configure:16387: checking for working memcmp
configure:16430: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16430: $? = 0
configure:16430: ./conftest
configure:16430: $? = 0
configure:16440: result: yes
configure:16454: checking for working strtod
configure:16495: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16495: $? = 0
configure:16495: ./conftest
configure:16495: $? = 0
configure:16505: result: yes
configure:16572: checking for mprotect
configure:16572: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16572: $? = 0
configure:16572: result: yes
configure:16589: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16589: $? = 0
configure:16602: checking for malloc
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:67:6: warning: incompatible redeclaration of library function 'malloc' [-Wincompatible-library-redeclaration]
char malloc ();
     ^
conftest.c:67:6: note: 'malloc' is a builtin with type 'void *(unsigned int)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for calloc
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:68:6: warning: incompatible redeclaration of library function 'calloc' [-Wincompatible-library-redeclaration]
char calloc ();
     ^
conftest.c:68:6: note: 'calloc' is a builtin with type 'void *(unsigned int, unsigned int)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for realloc
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:69:6: warning: incompatible redeclaration of library function 'realloc' [-Wincompatible-library-redeclaration]
char realloc ();
     ^
conftest.c:69:6: note: 'realloc' is a builtin with type 'void *(void *, unsigned int)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for free
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for getenv
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for setenv
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for putenv
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for unsetenv
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for qsort
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for abs
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:76:6: warning: incompatible redeclaration of library function 'abs' [-Wincompatible-library-redeclaration]
char abs ();
     ^
conftest.c:76:6: note: 'abs' is a builtin with type 'int (int)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for bcopy
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for memset
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:78:6: warning: incompatible redeclaration of library function 'memset' [-Wincompatible-library-redeclaration]
char memset ();
     ^
conftest.c:78:6: note: 'memset' is a builtin with type 'void *(void *, int, unsigned int)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for memcpy
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:79:6: warning: incompatible redeclaration of library function 'memcpy' [-Wincompatible-library-redeclaration]
char memcpy ();
     ^
conftest.c:79:6: note: 'memcpy' is a builtin with type 'void *(void *, const void *, unsigned int)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for memmove
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:80:6: warning: incompatible redeclaration of library function 'memmove' [-Wincompatible-library-redeclaration]
char memmove ();
     ^
conftest.c:80:6: note: 'memmove' is a builtin with type 'void *(void *, const void *, unsigned int)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for strlen
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:81:6: warning: incompatible redeclaration of library function 'strlen' [-Wincompatible-library-redeclaration]
char strlen ();
     ^
conftest.c:81:6: note: 'strlen' is a builtin with type 'unsigned int (const char *)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for strlcpy
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:82:6: warning: incompatible redeclaration of library function 'strlcpy' [-Wincompatible-library-redeclaration]
char strlcpy ();
     ^
conftest.c:82:6: note: 'strlcpy' is a builtin with type 'unsigned int (char *, const char *, unsigned int)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for strlcat
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:83:6: warning: incompatible redeclaration of library function 'strlcat' [-Wincompatible-library-redeclaration]
char strlcat ();
     ^
conftest.c:83:6: note: 'strlcat' is a builtin with type 'unsigned int (char *, const char *, unsigned int)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for strdup
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:84:6: warning: incompatible redeclaration of library function 'strdup' [-Wincompatible-library-redeclaration]
char strdup ();
     ^
conftest.c:84:6: note: 'strdup' is a builtin with type 'char *(const char *)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for _strrev
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
error: unresolved symbol: _strrev
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1043, in <module>
    _main(environ=os.environ)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1033, in _main
    temp_files.run_and_clean(lambda: main(
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/tempfiles.py", line 39, in run_and_clean
    return func()
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1039, in <lambda>
    DEBUG_CACHE=DEBUG_CACHE,
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 940, in main
    temp_files=temp_files, DEBUG=DEBUG, DEBUG_CACHE=DEBUG_CACHE)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 195, in emscript
    cwd=path_from_root('src'), error_limit=300)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/jsrun.py", line 75, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/usr/local/bin/node', '/usr/local/Cellar/emscripten/1.33.0/libexec/src/compiler.js', '/tmp/tmpQSmueF.txt'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emcc", line 1270, in <module>
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/shared.py", line 1535, in emscripten
    assert os.path.exists(filename + '.o.js'), 'Emscripten failed to generate .js'
AssertionError: Emscripten failed to generate .js
configure:16602: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBC 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_STDARG_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRING_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_CTYPE_H 1
| #define HAVE_MATH_H 1
| #define HAVE_ICONV_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_M_PI /**/
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define HAVE_MEMCMP 1
| #define HAVE_STRTOD 1
| #define HAVE_MPROTECT 1
| #define HAVE_MALLOC 1
| #define HAVE_CALLOC 1
| #define HAVE_REALLOC 1
| #define HAVE_FREE 1
| #define HAVE_GETENV 1
| #define HAVE_SETENV 1
| #define HAVE_PUTENV 1
| #define HAVE_UNSETENV 1
| #define HAVE_QSORT 1
| #define HAVE_ABS 1
| #define HAVE_BCOPY 1
| #define HAVE_MEMSET 1
| #define HAVE_MEMCPY 1
| #define HAVE_MEMMOVE 1
| #define HAVE_STRLEN 1
| #define HAVE_STRLCPY 1
| #define HAVE_STRLCAT 1
| #define HAVE_STRDUP 1
| /* end confdefs.h.  */
| /* Define _strrev to an innocuous variant, in case <limits.h> declares _strrev.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define _strrev innocuous__strrev
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char _strrev (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef _strrev
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char _strrev ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub__strrev || defined __stub____strrev
| choke me
| #endif
| 
| int
| main ()
| {
| return _strrev ();
|   ;
|   return 0;
| }
configure:16602: result: no
configure:16602: checking for _strupr
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
error: unresolved symbol: _strupr
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1043, in <module>
    _main(environ=os.environ)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1033, in _main
    temp_files.run_and_clean(lambda: main(
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/tempfiles.py", line 39, in run_and_clean
    return func()
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1039, in <lambda>
    DEBUG_CACHE=DEBUG_CACHE,
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 940, in main
    temp_files=temp_files, DEBUG=DEBUG, DEBUG_CACHE=DEBUG_CACHE)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 195, in emscript
    cwd=path_from_root('src'), error_limit=300)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/jsrun.py", line 75, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/usr/local/bin/node', '/usr/local/Cellar/emscripten/1.33.0/libexec/src/compiler.js', '/tmp/tmpJCSh7p.txt'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emcc", line 1270, in <module>
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/shared.py", line 1535, in emscripten
    assert os.path.exists(filename + '.o.js'), 'Emscripten failed to generate .js'
AssertionError: Emscripten failed to generate .js
configure:16602: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBC 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_STDARG_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRING_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_CTYPE_H 1
| #define HAVE_MATH_H 1
| #define HAVE_ICONV_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_M_PI /**/
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define HAVE_MEMCMP 1
| #define HAVE_STRTOD 1
| #define HAVE_MPROTECT 1
| #define HAVE_MALLOC 1
| #define HAVE_CALLOC 1
| #define HAVE_REALLOC 1
| #define HAVE_FREE 1
| #define HAVE_GETENV 1
| #define HAVE_SETENV 1
| #define HAVE_PUTENV 1
| #define HAVE_UNSETENV 1
| #define HAVE_QSORT 1
| #define HAVE_ABS 1
| #define HAVE_BCOPY 1
| #define HAVE_MEMSET 1
| #define HAVE_MEMCPY 1
| #define HAVE_MEMMOVE 1
| #define HAVE_STRLEN 1
| #define HAVE_STRLCPY 1
| #define HAVE_STRLCAT 1
| #define HAVE_STRDUP 1
| /* end confdefs.h.  */
| /* Define _strupr to an innocuous variant, in case <limits.h> declares _strupr.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define _strupr innocuous__strupr
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char _strupr (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef _strupr
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char _strupr ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub__strupr || defined __stub____strupr
| choke me
| #endif
| 
| int
| main ()
| {
| return _strupr ();
|   ;
|   return 0;
| }
configure:16602: result: no
configure:16602: checking for _strlwr
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
error: unresolved symbol: _strlwr
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1043, in <module>
    _main(environ=os.environ)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1033, in _main
    temp_files.run_and_clean(lambda: main(
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/tempfiles.py", line 39, in run_and_clean
    return func()
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1039, in <lambda>
    DEBUG_CACHE=DEBUG_CACHE,
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 940, in main
    temp_files=temp_files, DEBUG=DEBUG, DEBUG_CACHE=DEBUG_CACHE)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 195, in emscript
    cwd=path_from_root('src'), error_limit=300)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/jsrun.py", line 75, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/usr/local/bin/node', '/usr/local/Cellar/emscripten/1.33.0/libexec/src/compiler.js', '/tmp/tmpJVoYOh.txt'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emcc", line 1270, in <module>
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/shared.py", line 1535, in emscripten
    assert os.path.exists(filename + '.o.js'), 'Emscripten failed to generate .js'
AssertionError: Emscripten failed to generate .js
configure:16602: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBC 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_STDARG_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRING_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_CTYPE_H 1
| #define HAVE_MATH_H 1
| #define HAVE_ICONV_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_M_PI /**/
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define HAVE_MEMCMP 1
| #define HAVE_STRTOD 1
| #define HAVE_MPROTECT 1
| #define HAVE_MALLOC 1
| #define HAVE_CALLOC 1
| #define HAVE_REALLOC 1
| #define HAVE_FREE 1
| #define HAVE_GETENV 1
| #define HAVE_SETENV 1
| #define HAVE_PUTENV 1
| #define HAVE_UNSETENV 1
| #define HAVE_QSORT 1
| #define HAVE_ABS 1
| #define HAVE_BCOPY 1
| #define HAVE_MEMSET 1
| #define HAVE_MEMCPY 1
| #define HAVE_MEMMOVE 1
| #define HAVE_STRLEN 1
| #define HAVE_STRLCPY 1
| #define HAVE_STRLCAT 1
| #define HAVE_STRDUP 1
| /* end confdefs.h.  */
| /* Define _strlwr to an innocuous variant, in case <limits.h> declares _strlwr.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define _strlwr innocuous__strlwr
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char _strlwr (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef _strlwr
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char _strlwr ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub__strlwr || defined __stub____strlwr
| choke me
| #endif
| 
| int
| main ()
| {
| return _strlwr ();
|   ;
|   return 0;
| }
configure:16602: result: no
configure:16602: checking for strchr
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:85:6: warning: incompatible redeclaration of library function 'strchr' [-Wincompatible-library-redeclaration]
char strchr ();
     ^
conftest.c:85:6: note: 'strchr' is a builtin with type 'char *(const char *, int)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for strrchr
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:86:6: warning: incompatible redeclaration of library function 'strrchr' [-Wincompatible-library-redeclaration]
char strrchr ();
     ^
conftest.c:86:6: note: 'strrchr' is a builtin with type 'char *(const char *, int)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for strstr
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:87:6: warning: incompatible redeclaration of library function 'strstr' [-Wincompatible-library-redeclaration]
char strstr ();
     ^
conftest.c:87:6: note: 'strstr' is a builtin with type 'char *(const char *, const char *)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for itoa
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
error: unresolved symbol: itoa
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1043, in <module>
    _main(environ=os.environ)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1033, in _main
    temp_files.run_and_clean(lambda: main(
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/tempfiles.py", line 39, in run_and_clean
    return func()
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1039, in <lambda>
    DEBUG_CACHE=DEBUG_CACHE,
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 940, in main
    temp_files=temp_files, DEBUG=DEBUG, DEBUG_CACHE=DEBUG_CACHE)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 195, in emscript
    cwd=path_from_root('src'), error_limit=300)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/jsrun.py", line 75, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/usr/local/bin/node', '/usr/local/Cellar/emscripten/1.33.0/libexec/src/compiler.js', '/tmp/tmpNI_dKG.txt'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emcc", line 1270, in <module>
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/shared.py", line 1535, in emscripten
    assert os.path.exists(filename + '.o.js'), 'Emscripten failed to generate .js'
AssertionError: Emscripten failed to generate .js
configure:16602: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBC 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_STDARG_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRING_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_CTYPE_H 1
| #define HAVE_MATH_H 1
| #define HAVE_ICONV_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_M_PI /**/
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define HAVE_MEMCMP 1
| #define HAVE_STRTOD 1
| #define HAVE_MPROTECT 1
| #define HAVE_MALLOC 1
| #define HAVE_CALLOC 1
| #define HAVE_REALLOC 1
| #define HAVE_FREE 1
| #define HAVE_GETENV 1
| #define HAVE_SETENV 1
| #define HAVE_PUTENV 1
| #define HAVE_UNSETENV 1
| #define HAVE_QSORT 1
| #define HAVE_ABS 1
| #define HAVE_BCOPY 1
| #define HAVE_MEMSET 1
| #define HAVE_MEMCPY 1
| #define HAVE_MEMMOVE 1
| #define HAVE_STRLEN 1
| #define HAVE_STRLCPY 1
| #define HAVE_STRLCAT 1
| #define HAVE_STRDUP 1
| #define HAVE_STRCHR 1
| #define HAVE_STRRCHR 1
| #define HAVE_STRSTR 1
| /* end confdefs.h.  */
| /* Define itoa to an innocuous variant, in case <limits.h> declares itoa.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define itoa innocuous_itoa
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char itoa (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef itoa
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char itoa ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_itoa || defined __stub___itoa
| choke me
| #endif
| 
| int
| main ()
| {
| return itoa ();
|   ;
|   return 0;
| }
configure:16602: result: no
configure:16602: checking for _ltoa
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
error: unresolved symbol: _ltoa
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1043, in <module>
    _main(environ=os.environ)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1033, in _main
    temp_files.run_and_clean(lambda: main(
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/tempfiles.py", line 39, in run_and_clean
    return func()
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1039, in <lambda>
    DEBUG_CACHE=DEBUG_CACHE,
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 940, in main
    temp_files=temp_files, DEBUG=DEBUG, DEBUG_CACHE=DEBUG_CACHE)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 195, in emscript
    cwd=path_from_root('src'), error_limit=300)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/jsrun.py", line 75, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/usr/local/bin/node', '/usr/local/Cellar/emscripten/1.33.0/libexec/src/compiler.js', '/tmp/tmpi_i2GQ.txt'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emcc", line 1270, in <module>
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/shared.py", line 1535, in emscripten
    assert os.path.exists(filename + '.o.js'), 'Emscripten failed to generate .js'
AssertionError: Emscripten failed to generate .js
configure:16602: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBC 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_STDARG_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRING_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_CTYPE_H 1
| #define HAVE_MATH_H 1
| #define HAVE_ICONV_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_M_PI /**/
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define HAVE_MEMCMP 1
| #define HAVE_STRTOD 1
| #define HAVE_MPROTECT 1
| #define HAVE_MALLOC 1
| #define HAVE_CALLOC 1
| #define HAVE_REALLOC 1
| #define HAVE_FREE 1
| #define HAVE_GETENV 1
| #define HAVE_SETENV 1
| #define HAVE_PUTENV 1
| #define HAVE_UNSETENV 1
| #define HAVE_QSORT 1
| #define HAVE_ABS 1
| #define HAVE_BCOPY 1
| #define HAVE_MEMSET 1
| #define HAVE_MEMCPY 1
| #define HAVE_MEMMOVE 1
| #define HAVE_STRLEN 1
| #define HAVE_STRLCPY 1
| #define HAVE_STRLCAT 1
| #define HAVE_STRDUP 1
| #define HAVE_STRCHR 1
| #define HAVE_STRRCHR 1
| #define HAVE_STRSTR 1
| /* end confdefs.h.  */
| /* Define _ltoa to an innocuous variant, in case <limits.h> declares _ltoa.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define _ltoa innocuous__ltoa
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char _ltoa (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef _ltoa
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char _ltoa ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub__ltoa || defined __stub____ltoa
| choke me
| #endif
| 
| int
| main ()
| {
| return _ltoa ();
|   ;
|   return 0;
| }
configure:16602: result: no
configure:16602: checking for _uitoa
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
error: unresolved symbol: _uitoa
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1043, in <module>
    _main(environ=os.environ)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1033, in _main
    temp_files.run_and_clean(lambda: main(
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/tempfiles.py", line 39, in run_and_clean
    return func()
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1039, in <lambda>
    DEBUG_CACHE=DEBUG_CACHE,
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 940, in main
    temp_files=temp_files, DEBUG=DEBUG, DEBUG_CACHE=DEBUG_CACHE)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 195, in emscript
    cwd=path_from_root('src'), error_limit=300)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/jsrun.py", line 75, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/usr/local/bin/node', '/usr/local/Cellar/emscripten/1.33.0/libexec/src/compiler.js', '/tmp/tmp6chtzI.txt'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emcc", line 1270, in <module>
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/shared.py", line 1535, in emscripten
    assert os.path.exists(filename + '.o.js'), 'Emscripten failed to generate .js'
AssertionError: Emscripten failed to generate .js
configure:16602: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBC 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_STDARG_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRING_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_CTYPE_H 1
| #define HAVE_MATH_H 1
| #define HAVE_ICONV_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_M_PI /**/
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define HAVE_MEMCMP 1
| #define HAVE_STRTOD 1
| #define HAVE_MPROTECT 1
| #define HAVE_MALLOC 1
| #define HAVE_CALLOC 1
| #define HAVE_REALLOC 1
| #define HAVE_FREE 1
| #define HAVE_GETENV 1
| #define HAVE_SETENV 1
| #define HAVE_PUTENV 1
| #define HAVE_UNSETENV 1
| #define HAVE_QSORT 1
| #define HAVE_ABS 1
| #define HAVE_BCOPY 1
| #define HAVE_MEMSET 1
| #define HAVE_MEMCPY 1
| #define HAVE_MEMMOVE 1
| #define HAVE_STRLEN 1
| #define HAVE_STRLCPY 1
| #define HAVE_STRLCAT 1
| #define HAVE_STRDUP 1
| #define HAVE_STRCHR 1
| #define HAVE_STRRCHR 1
| #define HAVE_STRSTR 1
| /* end confdefs.h.  */
| /* Define _uitoa to an innocuous variant, in case <limits.h> declares _uitoa.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define _uitoa innocuous__uitoa
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char _uitoa (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef _uitoa
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char _uitoa ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub__uitoa || defined __stub____uitoa
| choke me
| #endif
| 
| int
| main ()
| {
| return _uitoa ();
|   ;
|   return 0;
| }
configure:16602: result: no
configure:16602: checking for _ultoa
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
error: unresolved symbol: _ultoa
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1043, in <module>
    _main(environ=os.environ)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1033, in _main
    temp_files.run_and_clean(lambda: main(
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/tempfiles.py", line 39, in run_and_clean
    return func()
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1039, in <lambda>
    DEBUG_CACHE=DEBUG_CACHE,
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 940, in main
    temp_files=temp_files, DEBUG=DEBUG, DEBUG_CACHE=DEBUG_CACHE)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 195, in emscript
    cwd=path_from_root('src'), error_limit=300)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/jsrun.py", line 75, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/usr/local/bin/node', '/usr/local/Cellar/emscripten/1.33.0/libexec/src/compiler.js', '/tmp/tmpswu4fH.txt'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emcc", line 1270, in <module>
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/shared.py", line 1535, in emscripten
    assert os.path.exists(filename + '.o.js'), 'Emscripten failed to generate .js'
AssertionError: Emscripten failed to generate .js
configure:16602: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBC 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_STDARG_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRING_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_CTYPE_H 1
| #define HAVE_MATH_H 1
| #define HAVE_ICONV_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_M_PI /**/
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define HAVE_MEMCMP 1
| #define HAVE_STRTOD 1
| #define HAVE_MPROTECT 1
| #define HAVE_MALLOC 1
| #define HAVE_CALLOC 1
| #define HAVE_REALLOC 1
| #define HAVE_FREE 1
| #define HAVE_GETENV 1
| #define HAVE_SETENV 1
| #define HAVE_PUTENV 1
| #define HAVE_UNSETENV 1
| #define HAVE_QSORT 1
| #define HAVE_ABS 1
| #define HAVE_BCOPY 1
| #define HAVE_MEMSET 1
| #define HAVE_MEMCPY 1
| #define HAVE_MEMMOVE 1
| #define HAVE_STRLEN 1
| #define HAVE_STRLCPY 1
| #define HAVE_STRLCAT 1
| #define HAVE_STRDUP 1
| #define HAVE_STRCHR 1
| #define HAVE_STRRCHR 1
| #define HAVE_STRSTR 1
| /* end confdefs.h.  */
| /* Define _ultoa to an innocuous variant, in case <limits.h> declares _ultoa.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define _ultoa innocuous__ultoa
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char _ultoa (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef _ultoa
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char _ultoa ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub__ultoa || defined __stub____ultoa
| choke me
| #endif
| 
| int
| main ()
| {
| return _ultoa ();
|   ;
|   return 0;
| }
configure:16602: result: no
configure:16602: checking for strtol
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for strtoul
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for _i64toa
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
error: unresolved symbol: _i64toa
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1043, in <module>
    _main(environ=os.environ)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1033, in _main
    temp_files.run_and_clean(lambda: main(
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/tempfiles.py", line 39, in run_and_clean
    return func()
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1039, in <lambda>
    DEBUG_CACHE=DEBUG_CACHE,
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 940, in main
    temp_files=temp_files, DEBUG=DEBUG, DEBUG_CACHE=DEBUG_CACHE)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 195, in emscript
    cwd=path_from_root('src'), error_limit=300)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/jsrun.py", line 75, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/usr/local/bin/node', '/usr/local/Cellar/emscripten/1.33.0/libexec/src/compiler.js', '/tmp/tmppC1lnU.txt'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emcc", line 1270, in <module>
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/shared.py", line 1535, in emscripten
    assert os.path.exists(filename + '.o.js'), 'Emscripten failed to generate .js'
AssertionError: Emscripten failed to generate .js
configure:16602: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBC 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_STDARG_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRING_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_CTYPE_H 1
| #define HAVE_MATH_H 1
| #define HAVE_ICONV_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_M_PI /**/
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define HAVE_MEMCMP 1
| #define HAVE_STRTOD 1
| #define HAVE_MPROTECT 1
| #define HAVE_MALLOC 1
| #define HAVE_CALLOC 1
| #define HAVE_REALLOC 1
| #define HAVE_FREE 1
| #define HAVE_GETENV 1
| #define HAVE_SETENV 1
| #define HAVE_PUTENV 1
| #define HAVE_UNSETENV 1
| #define HAVE_QSORT 1
| #define HAVE_ABS 1
| #define HAVE_BCOPY 1
| #define HAVE_MEMSET 1
| #define HAVE_MEMCPY 1
| #define HAVE_MEMMOVE 1
| #define HAVE_STRLEN 1
| #define HAVE_STRLCPY 1
| #define HAVE_STRLCAT 1
| #define HAVE_STRDUP 1
| #define HAVE_STRCHR 1
| #define HAVE_STRRCHR 1
| #define HAVE_STRSTR 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| /* end confdefs.h.  */
| /* Define _i64toa to an innocuous variant, in case <limits.h> declares _i64toa.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define _i64toa innocuous__i64toa
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char _i64toa (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef _i64toa
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char _i64toa ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub__i64toa || defined __stub____i64toa
| choke me
| #endif
| 
| int
| main ()
| {
| return _i64toa ();
|   ;
|   return 0;
| }
configure:16602: result: no
configure:16602: checking for _ui64toa
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
error: unresolved symbol: _ui64toa
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1043, in <module>
    _main(environ=os.environ)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1033, in _main
    temp_files.run_and_clean(lambda: main(
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/tempfiles.py", line 39, in run_and_clean
    return func()
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1039, in <lambda>
    DEBUG_CACHE=DEBUG_CACHE,
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 940, in main
    temp_files=temp_files, DEBUG=DEBUG, DEBUG_CACHE=DEBUG_CACHE)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 195, in emscript
    cwd=path_from_root('src'), error_limit=300)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/jsrun.py", line 75, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/usr/local/bin/node', '/usr/local/Cellar/emscripten/1.33.0/libexec/src/compiler.js', '/tmp/tmpSDVzHr.txt'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emcc", line 1270, in <module>
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/shared.py", line 1535, in emscripten
    assert os.path.exists(filename + '.o.js'), 'Emscripten failed to generate .js'
AssertionError: Emscripten failed to generate .js
configure:16602: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBC 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_STDARG_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRING_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_CTYPE_H 1
| #define HAVE_MATH_H 1
| #define HAVE_ICONV_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_M_PI /**/
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define HAVE_MEMCMP 1
| #define HAVE_STRTOD 1
| #define HAVE_MPROTECT 1
| #define HAVE_MALLOC 1
| #define HAVE_CALLOC 1
| #define HAVE_REALLOC 1
| #define HAVE_FREE 1
| #define HAVE_GETENV 1
| #define HAVE_SETENV 1
| #define HAVE_PUTENV 1
| #define HAVE_UNSETENV 1
| #define HAVE_QSORT 1
| #define HAVE_ABS 1
| #define HAVE_BCOPY 1
| #define HAVE_MEMSET 1
| #define HAVE_MEMCPY 1
| #define HAVE_MEMMOVE 1
| #define HAVE_STRLEN 1
| #define HAVE_STRLCPY 1
| #define HAVE_STRLCAT 1
| #define HAVE_STRDUP 1
| #define HAVE_STRCHR 1
| #define HAVE_STRRCHR 1
| #define HAVE_STRSTR 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| /* end confdefs.h.  */
| /* Define _ui64toa to an innocuous variant, in case <limits.h> declares _ui64toa.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define _ui64toa innocuous__ui64toa
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char _ui64toa (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef _ui64toa
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char _ui64toa ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub__ui64toa || defined __stub____ui64toa
| choke me
| #endif
| 
| int
| main ()
| {
| return _ui64toa ();
|   ;
|   return 0;
| }
configure:16602: result: no
configure:16602: checking for strtoll
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for strtoull
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for atoi
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for atof
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for strcmp
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:94:6: warning: incompatible redeclaration of library function 'strcmp' [-Wincompatible-library-redeclaration]
char strcmp ();
     ^
conftest.c:94:6: note: 'strcmp' is a builtin with type 'int (const char *, const char *)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for strncmp
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:95:6: warning: incompatible redeclaration of library function 'strncmp' [-Wincompatible-library-redeclaration]
char strncmp ();
     ^
conftest.c:95:6: note: 'strncmp' is a builtin with type 'int (const char *, const char *, unsigned int)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for _stricmp
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
error: unresolved symbol: _stricmp
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1043, in <module>
    _main(environ=os.environ)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1033, in _main
    temp_files.run_and_clean(lambda: main(
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/tempfiles.py", line 39, in run_and_clean
    return func()
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1039, in <lambda>
    DEBUG_CACHE=DEBUG_CACHE,
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 940, in main
    temp_files=temp_files, DEBUG=DEBUG, DEBUG_CACHE=DEBUG_CACHE)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 195, in emscript
    cwd=path_from_root('src'), error_limit=300)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/jsrun.py", line 75, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/usr/local/bin/node', '/usr/local/Cellar/emscripten/1.33.0/libexec/src/compiler.js', '/tmp/tmpWm54ZO.txt'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emcc", line 1270, in <module>
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/shared.py", line 1535, in emscripten
    assert os.path.exists(filename + '.o.js'), 'Emscripten failed to generate .js'
AssertionError: Emscripten failed to generate .js
configure:16602: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBC 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_STDARG_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRING_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_CTYPE_H 1
| #define HAVE_MATH_H 1
| #define HAVE_ICONV_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_M_PI /**/
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define HAVE_MEMCMP 1
| #define HAVE_STRTOD 1
| #define HAVE_MPROTECT 1
| #define HAVE_MALLOC 1
| #define HAVE_CALLOC 1
| #define HAVE_REALLOC 1
| #define HAVE_FREE 1
| #define HAVE_GETENV 1
| #define HAVE_SETENV 1
| #define HAVE_PUTENV 1
| #define HAVE_UNSETENV 1
| #define HAVE_QSORT 1
| #define HAVE_ABS 1
| #define HAVE_BCOPY 1
| #define HAVE_MEMSET 1
| #define HAVE_MEMCPY 1
| #define HAVE_MEMMOVE 1
| #define HAVE_STRLEN 1
| #define HAVE_STRLCPY 1
| #define HAVE_STRLCAT 1
| #define HAVE_STRDUP 1
| #define HAVE_STRCHR 1
| #define HAVE_STRRCHR 1
| #define HAVE_STRSTR 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_STRTOLL 1
| #define HAVE_STRTOULL 1
| #define HAVE_ATOI 1
| #define HAVE_ATOF 1
| #define HAVE_STRCMP 1
| #define HAVE_STRNCMP 1
| /* end confdefs.h.  */
| /* Define _stricmp to an innocuous variant, in case <limits.h> declares _stricmp.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define _stricmp innocuous__stricmp
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char _stricmp (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef _stricmp
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char _stricmp ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub__stricmp || defined __stub____stricmp
| choke me
| #endif
| 
| int
| main ()
| {
| return _stricmp ();
|   ;
|   return 0;
| }
configure:16602: result: no
configure:16602: checking for strcasecmp
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:96:6: warning: incompatible redeclaration of library function 'strcasecmp' [-Wincompatible-library-redeclaration]
char strcasecmp ();
     ^
conftest.c:96:6: note: 'strcasecmp' is a builtin with type 'int (const char *, const char *)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for _strnicmp
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
error: unresolved symbol: _strnicmp
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1043, in <module>
    _main(environ=os.environ)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1033, in _main
    temp_files.run_and_clean(lambda: main(
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/tempfiles.py", line 39, in run_and_clean
    return func()
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1039, in <lambda>
    DEBUG_CACHE=DEBUG_CACHE,
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 940, in main
    temp_files=temp_files, DEBUG=DEBUG, DEBUG_CACHE=DEBUG_CACHE)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 195, in emscript
    cwd=path_from_root('src'), error_limit=300)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/jsrun.py", line 75, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/usr/local/bin/node', '/usr/local/Cellar/emscripten/1.33.0/libexec/src/compiler.js', '/tmp/tmptEUGRC.txt'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emcc", line 1270, in <module>
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/shared.py", line 1535, in emscripten
    assert os.path.exists(filename + '.o.js'), 'Emscripten failed to generate .js'
AssertionError: Emscripten failed to generate .js
configure:16602: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBC 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_STDARG_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRING_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_CTYPE_H 1
| #define HAVE_MATH_H 1
| #define HAVE_ICONV_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_M_PI /**/
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define HAVE_MEMCMP 1
| #define HAVE_STRTOD 1
| #define HAVE_MPROTECT 1
| #define HAVE_MALLOC 1
| #define HAVE_CALLOC 1
| #define HAVE_REALLOC 1
| #define HAVE_FREE 1
| #define HAVE_GETENV 1
| #define HAVE_SETENV 1
| #define HAVE_PUTENV 1
| #define HAVE_UNSETENV 1
| #define HAVE_QSORT 1
| #define HAVE_ABS 1
| #define HAVE_BCOPY 1
| #define HAVE_MEMSET 1
| #define HAVE_MEMCPY 1
| #define HAVE_MEMMOVE 1
| #define HAVE_STRLEN 1
| #define HAVE_STRLCPY 1
| #define HAVE_STRLCAT 1
| #define HAVE_STRDUP 1
| #define HAVE_STRCHR 1
| #define HAVE_STRRCHR 1
| #define HAVE_STRSTR 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_STRTOLL 1
| #define HAVE_STRTOULL 1
| #define HAVE_ATOI 1
| #define HAVE_ATOF 1
| #define HAVE_STRCMP 1
| #define HAVE_STRNCMP 1
| #define HAVE_STRCASECMP 1
| /* end confdefs.h.  */
| /* Define _strnicmp to an innocuous variant, in case <limits.h> declares _strnicmp.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define _strnicmp innocuous__strnicmp
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char _strnicmp (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef _strnicmp
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char _strnicmp ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub__strnicmp || defined __stub____strnicmp
| choke me
| #endif
| 
| int
| main ()
| {
| return _strnicmp ();
|   ;
|   return 0;
| }
configure:16602: result: no
configure:16602: checking for strncasecmp
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:97:6: warning: incompatible redeclaration of library function 'strncasecmp' [-Wincompatible-library-redeclaration]
char strncasecmp ();
     ^
conftest.c:97:6: note: 'strncasecmp' is a builtin with type 'int (const char *, const char *, unsigned int)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for vsscanf
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:98:6: warning: incompatible redeclaration of library function 'vsscanf' [-Wincompatible-library-redeclaration]
char vsscanf ();
     ^
conftest.c:98:6: note: 'vsscanf' is a builtin with type 'int (const char *restrict, const char *restrict, int *)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for vsnprintf
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:99:6: warning: incompatible redeclaration of library function 'vsnprintf' [-Wincompatible-library-redeclaration]
char vsnprintf ();
     ^
conftest.c:99:6: note: 'vsnprintf' is a builtin with type 'int (char *, unsigned int, const char *, int *)'
1 warning generated.
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for fseeko
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for fseeko64
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
error: unresolved symbol: fseeko64
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1043, in <module>
    _main(environ=os.environ)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1033, in _main
    temp_files.run_and_clean(lambda: main(
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/tempfiles.py", line 39, in run_and_clean
    return func()
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1039, in <lambda>
    DEBUG_CACHE=DEBUG_CACHE,
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 940, in main
    temp_files=temp_files, DEBUG=DEBUG, DEBUG_CACHE=DEBUG_CACHE)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 195, in emscript
    cwd=path_from_root('src'), error_limit=300)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/jsrun.py", line 75, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/usr/local/bin/node', '/usr/local/Cellar/emscripten/1.33.0/libexec/src/compiler.js', '/tmp/tmp8E_hLY.txt'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emcc", line 1270, in <module>
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/shared.py", line 1535, in emscripten
    assert os.path.exists(filename + '.o.js'), 'Emscripten failed to generate .js'
AssertionError: Emscripten failed to generate .js
configure:16602: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBC 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_STDARG_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRING_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_CTYPE_H 1
| #define HAVE_MATH_H 1
| #define HAVE_ICONV_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_M_PI /**/
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define HAVE_MEMCMP 1
| #define HAVE_STRTOD 1
| #define HAVE_MPROTECT 1
| #define HAVE_MALLOC 1
| #define HAVE_CALLOC 1
| #define HAVE_REALLOC 1
| #define HAVE_FREE 1
| #define HAVE_GETENV 1
| #define HAVE_SETENV 1
| #define HAVE_PUTENV 1
| #define HAVE_UNSETENV 1
| #define HAVE_QSORT 1
| #define HAVE_ABS 1
| #define HAVE_BCOPY 1
| #define HAVE_MEMSET 1
| #define HAVE_MEMCPY 1
| #define HAVE_MEMMOVE 1
| #define HAVE_STRLEN 1
| #define HAVE_STRLCPY 1
| #define HAVE_STRLCAT 1
| #define HAVE_STRDUP 1
| #define HAVE_STRCHR 1
| #define HAVE_STRRCHR 1
| #define HAVE_STRSTR 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_STRTOLL 1
| #define HAVE_STRTOULL 1
| #define HAVE_ATOI 1
| #define HAVE_ATOF 1
| #define HAVE_STRCMP 1
| #define HAVE_STRNCMP 1
| #define HAVE_STRCASECMP 1
| #define HAVE_STRNCASECMP 1
| #define HAVE_VSSCANF 1
| #define HAVE_VSNPRINTF 1
| #define HAVE_FSEEKO 1
| /* end confdefs.h.  */
| /* Define fseeko64 to an innocuous variant, in case <limits.h> declares fseeko64.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define fseeko64 innocuous_fseeko64
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char fseeko64 (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef fseeko64
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char fseeko64 ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_fseeko64 || defined __stub___fseeko64
| choke me
| #endif
| 
| int
| main ()
| {
| return fseeko64 ();
|   ;
|   return 0;
| }
configure:16602: result: no
configure:16602: checking for sigaction
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for setjmp
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:102:6: warning: declaration of built-in function 'setjmp' requires inclusion of the header <setjmp.h> [-Wbuiltin-requires-header]
char setjmp ();
     ^
1 warning generated.
i8 ()* bitcast (i8 (...)* @setjmp to i8 ()*)
LLVM ERROR: bad use of setjmp, should only call it
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emcc", line 1240, in <module>
    shared.Building.llvm_opt(final, link_opts)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/shared.py", line 1429, in llvm_opt
    assert os.path.exists(target), 'Failed to run llvm optimizations: ' + output
AssertionError: Failed to run llvm optimizations: 
configure:16602: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBC 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_STDARG_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRING_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_CTYPE_H 1
| #define HAVE_MATH_H 1
| #define HAVE_ICONV_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_M_PI /**/
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define HAVE_MEMCMP 1
| #define HAVE_STRTOD 1
| #define HAVE_MPROTECT 1
| #define HAVE_MALLOC 1
| #define HAVE_CALLOC 1
| #define HAVE_REALLOC 1
| #define HAVE_FREE 1
| #define HAVE_GETENV 1
| #define HAVE_SETENV 1
| #define HAVE_PUTENV 1
| #define HAVE_UNSETENV 1
| #define HAVE_QSORT 1
| #define HAVE_ABS 1
| #define HAVE_BCOPY 1
| #define HAVE_MEMSET 1
| #define HAVE_MEMCPY 1
| #define HAVE_MEMMOVE 1
| #define HAVE_STRLEN 1
| #define HAVE_STRLCPY 1
| #define HAVE_STRLCAT 1
| #define HAVE_STRDUP 1
| #define HAVE_STRCHR 1
| #define HAVE_STRRCHR 1
| #define HAVE_STRSTR 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_STRTOLL 1
| #define HAVE_STRTOULL 1
| #define HAVE_ATOI 1
| #define HAVE_ATOF 1
| #define HAVE_STRCMP 1
| #define HAVE_STRNCMP 1
| #define HAVE_STRCASECMP 1
| #define HAVE_STRNCASECMP 1
| #define HAVE_VSSCANF 1
| #define HAVE_VSNPRINTF 1
| #define HAVE_FSEEKO 1
| #define HAVE_SIGACTION 1
| /* end confdefs.h.  */
| /* Define setjmp to an innocuous variant, in case <limits.h> declares setjmp.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define setjmp innocuous_setjmp
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char setjmp (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef setjmp
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char setjmp ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_setjmp || defined __stub___setjmp
| choke me
| #endif
| 
| int
| main ()
| {
| return setjmp ();
|   ;
|   return 0;
| }
configure:16602: result: no
configure:16602: checking for nanosleep
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for sysconf
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16602: $? = 0
configure:16602: result: yes
configure:16602: checking for sysctlbyname
configure:16602: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
error: unresolved symbol: sysctlbyname
Aborting compilation due to previous errors | undefined
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1043, in <module>
    _main(environ=os.environ)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1033, in _main
    temp_files.run_and_clean(lambda: main(
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/tempfiles.py", line 39, in run_and_clean
    return func()
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 1039, in <lambda>
    DEBUG_CACHE=DEBUG_CACHE,
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 940, in main
    temp_files=temp_files, DEBUG=DEBUG, DEBUG_CACHE=DEBUG_CACHE)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emscripten.py", line 195, in emscript
    cwd=path_from_root('src'), error_limit=300)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/jsrun.py", line 75, in run_js
    raise Exception('Expected the command ' + str(command) + ' to finish with return code ' + str(assert_returncode) + ', but it returned with code ' + str(proc.returncode) + ' instead! Output: ' + str(ret)[:error_limit])
Exception: Expected the command ['/usr/local/bin/node', '/usr/local/Cellar/emscripten/1.33.0/libexec/src/compiler.js', '/tmp/tmpHA0xW3.txt'] to finish with return code 0, but it returned with code 1 instead! Output: // The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..gener
Traceback (most recent call last):
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/emcc", line 1270, in <module>
    final = shared.Building.emscripten(final, append_ext=False, extra_args=extra_args)
  File "/usr/local/Cellar/emscripten/1.33.0/libexec/tools/shared.py", line 1535, in emscripten
    assert os.path.exists(filename + '.o.js'), 'Emscripten failed to generate .js'
AssertionError: Emscripten failed to generate .js
configure:16602: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_LIBC 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_STDARG_H 1
| #define HAVE_MALLOC_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRING_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_CTYPE_H 1
| #define HAVE_MATH_H 1
| #define HAVE_ICONV_H 1
| #define HAVE_SIGNAL_H 1
| #define HAVE_M_PI /**/
| #define HAVE_ALLOCA_H 1
| #define HAVE_ALLOCA 1
| #define HAVE_MEMCMP 1
| #define HAVE_STRTOD 1
| #define HAVE_MPROTECT 1
| #define HAVE_MALLOC 1
| #define HAVE_CALLOC 1
| #define HAVE_REALLOC 1
| #define HAVE_FREE 1
| #define HAVE_GETENV 1
| #define HAVE_SETENV 1
| #define HAVE_PUTENV 1
| #define HAVE_UNSETENV 1
| #define HAVE_QSORT 1
| #define HAVE_ABS 1
| #define HAVE_BCOPY 1
| #define HAVE_MEMSET 1
| #define HAVE_MEMCPY 1
| #define HAVE_MEMMOVE 1
| #define HAVE_STRLEN 1
| #define HAVE_STRLCPY 1
| #define HAVE_STRLCAT 1
| #define HAVE_STRDUP 1
| #define HAVE_STRCHR 1
| #define HAVE_STRRCHR 1
| #define HAVE_STRSTR 1
| #define HAVE_STRTOL 1
| #define HAVE_STRTOUL 1
| #define HAVE_STRTOLL 1
| #define HAVE_STRTOULL 1
| #define HAVE_ATOI 1
| #define HAVE_ATOF 1
| #define HAVE_STRCMP 1
| #define HAVE_STRNCMP 1
| #define HAVE_STRCASECMP 1
| #define HAVE_STRNCASECMP 1
| #define HAVE_VSSCANF 1
| #define HAVE_VSNPRINTF 1
| #define HAVE_FSEEKO 1
| #define HAVE_SIGACTION 1
| #define HAVE_NANOSLEEP 1
| #define HAVE_SYSCONF 1
| /* end confdefs.h.  */
| /* Define sysctlbyname to an innocuous variant, in case <limits.h> declares sysctlbyname.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define sysctlbyname innocuous_sysctlbyname
| 
| /* System header to define __stub macros and hopefully few prototypes,
|     which can conflict with char sysctlbyname (); below.
|     Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
|     <limits.h> exists even on freestanding compilers.  */
| 
| #ifdef __STDC__
| # include <limits.h>
| #else
| # include <assert.h>
| #endif
| 
| #undef sysctlbyname
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char sysctlbyname ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_sysctlbyname || defined __stub___sysctlbyname
| choke me
| #endif
| 
| int
| main ()
| {
| return sysctlbyname ();
|   ;
|   return 0;
| }
configure:16602: result: no
configure:16612: checking for pow in -lm
configure:16637: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c -lm   >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:88:6: warning: incompatible redeclaration of library function 'pow' [-Wincompatible-library-redeclaration]
char pow ();
     ^
conftest.c:88:6: note: 'pow' is a builtin with type 'double (double, double)'
1 warning generated.
configure:16637: $? = 0
configure:16646: result: yes
configure:16655: checking for atan
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:104:6: warning: incompatible redeclaration of library function 'atan' [-Wincompatible-library-redeclaration]
char atan ();
     ^
conftest.c:104:6: note: 'atan' is a builtin with type 'double (double)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for atan2
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:105:6: warning: incompatible redeclaration of library function 'atan2' [-Wincompatible-library-redeclaration]
char atan2 ();
     ^
conftest.c:105:6: note: 'atan2' is a builtin with type 'double (double, double)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for acos
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:106:6: warning: incompatible redeclaration of library function 'acos' [-Wincompatible-library-redeclaration]
char acos ();
     ^
conftest.c:106:6: note: 'acos' is a builtin with type 'double (double)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for asin
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:107:6: warning: incompatible redeclaration of library function 'asin' [-Wincompatible-library-redeclaration]
char asin ();
     ^
conftest.c:107:6: note: 'asin' is a builtin with type 'double (double)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for ceil
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:108:6: warning: incompatible redeclaration of library function 'ceil' [-Wincompatible-library-redeclaration]
char ceil ();
     ^
conftest.c:108:6: note: 'ceil' is a builtin with type 'double (double)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for copysign
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:109:6: warning: incompatible redeclaration of library function 'copysign' [-Wincompatible-library-redeclaration]
char copysign ();
     ^
conftest.c:109:6: note: 'copysign' is a builtin with type 'double (double, double)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for cos
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:110:6: warning: incompatible redeclaration of library function 'cos' [-Wincompatible-library-redeclaration]
char cos ();
     ^
conftest.c:110:6: note: 'cos' is a builtin with type 'double (double)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for cosf
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:111:6: warning: incompatible redeclaration of library function 'cosf' [-Wincompatible-library-redeclaration]
char cosf ();
     ^
conftest.c:111:6: note: 'cosf' is a builtin with type 'float (float)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for fabs
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:112:6: warning: incompatible redeclaration of library function 'fabs' [-Wincompatible-library-redeclaration]
char fabs ();
     ^
conftest.c:112:6: note: 'fabs' is a builtin with type 'double (double)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for floor
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:113:6: warning: incompatible redeclaration of library function 'floor' [-Wincompatible-library-redeclaration]
char floor ();
     ^
conftest.c:113:6: note: 'floor' is a builtin with type 'double (double)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for log
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:114:6: warning: incompatible redeclaration of library function 'log' [-Wincompatible-library-redeclaration]
char log ();
     ^
conftest.c:114:6: note: 'log' is a builtin with type 'double (double)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for pow
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:115:6: warning: incompatible redeclaration of library function 'pow' [-Wincompatible-library-redeclaration]
char pow ();
     ^
conftest.c:115:6: note: 'pow' is a builtin with type 'double (double, double)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for scalbn
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:116:6: warning: incompatible redeclaration of library function 'scalbn' [-Wincompatible-library-redeclaration]
char scalbn ();
     ^
conftest.c:116:6: note: 'scalbn' is a builtin with type 'double (double, int)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for sin
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:117:6: warning: incompatible redeclaration of library function 'sin' [-Wincompatible-library-redeclaration]
char sin ();
     ^
conftest.c:117:6: note: 'sin' is a builtin with type 'double (double)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for sinf
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:118:6: warning: incompatible redeclaration of library function 'sinf' [-Wincompatible-library-redeclaration]
char sinf ();
     ^
conftest.c:118:6: note: 'sinf' is a builtin with type 'float (float)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for sqrt
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:119:6: warning: incompatible redeclaration of library function 'sqrt' [-Wincompatible-library-redeclaration]
char sqrt ();
     ^
conftest.c:119:6: note: 'sqrt' is a builtin with type 'double (double)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for sqrtf
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:120:6: warning: incompatible redeclaration of library function 'sqrtf' [-Wincompatible-library-redeclaration]
char sqrtf ();
     ^
conftest.c:120:6: note: 'sqrtf' is a builtin with type 'float (float)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for tan
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:121:6: warning: incompatible redeclaration of library function 'tan' [-Wincompatible-library-redeclaration]
char tan ();
     ^
conftest.c:121:6: note: 'tan' is a builtin with type 'double (double)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16655: checking for tanf
configure:16655: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
conftest.c:122:6: warning: incompatible redeclaration of library function 'tanf' [-Wincompatible-library-redeclaration]
char tanf ();
     ^
conftest.c:122:6: note: 'tanf' is a builtin with type 'float (float)'
1 warning generated.
configure:16655: $? = 0
configure:16655: result: yes
configure:16665: checking for iconv_open in -liconv
configure:16690: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c -liconv   -lm >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
WARNING  root: [33memcc: cannot find library "iconv"[0m
configure:16690: $? = 0
configure:16699: result: yes
configure:16707: checking for iconv
configure:16707: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm -liconv >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
WARNING  root: [33memcc: cannot find library "iconv"[0m
configure:16707: $? = 0
configure:16707: result: yes
configure:16717: checking for struct sigaction.sa_sigaction
configure:16717: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:16717: $? = 0
configure:16717: result: yes
configure:16736: checking for GCC builtin atomic operations
configure:16758: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c  -lm -liconv >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
WARNING  root: [33memcc: cannot find library "iconv"[0m
configure:16758: $? = 0
configure:16765: result: yes
configure:18569: checking for GCC -fvisibility=hidden option
configure:18592: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include  -fvisibility=hidden -Werror  -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:18592: $? = 0
configure:18598: result: yes
configure:22330: checking for dlopen
configure:22349: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:22349: $? = 0
configure:22355: result: yes
configure:22359: checking for dlopen in -lc
configure:22384: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c -lc   -lm -liconv >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
WARNING  root: [33memcc: cannot find library "c"[0m
WARNING  root: [33memcc: cannot find library "iconv"[0m
configure:22384: $? = 0
configure:22393: result: yes
configure:22806: checking for clock_gettime in -lrt
configure:22831: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -o conftest -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include    conftest.c -lrt   -lm -liconv >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
WARNING  root: [33memcc: cannot find library "rt"[0m
WARNING  root: [33memcc: cannot find library "iconv"[0m
configure:22831: $? = 0
configure:22840: result: yes
configure:21391: checking for EGL support
configure:21408: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:21408: $? = 0
configure:21414: result: yes
configure:21422: checking for OpenGL ES v2 headers
configure:21440: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include   -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:21440: $? = 0
configure:21446: result: yes
configure:18646: checking for GCC -Wall option
configure:18666: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include  -Wall  -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:18666: $? = 0
configure:18672: result: yes
configure:18679: checking for necessary GCC -Wno-multichar option
configure:18687: result: no
configure:18697: checking for GCC -Wshadow option
configure:18717: /usr/local/Cellar/emscripten/1.33.0/libexec/emcc -c -O2 -Iinclude -I/Users/kaizhu/src/sdl2/include  -Wshadow  -Iinclude -I/Users/kaizhu/src/sdl2/include  conftest.c >&5
WARNING  root: [33m-I or -L of an absolute path "-I/Users/kaizhu/src/sdl2/include" encountered. If this is to a local system header/library, it may cause problems (local system files make sense for compiling natively on your system, but not necessarily to JavaScript). Pass '-Wno-warn-absolute-paths' to emcc to hide this warning.[0m
configure:18717: $? = 0
configure:18723: result: yes
configure:23942: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by config.status, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on minime2

config.status:1273: creating Makefile
config.status:1273: creating sdl2-config
config.status:1273: creating SDL2.spec
config.status:1273: creating sdl2.pc
config.status:1273: creating include/SDL_config.h
config.status:1447: executing libtool commands
config.status:1447: executing sdl2_config commands
config.status:1447: executing summary commands

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=x86_64-apple-darwin13.4.0
ac_cv_c_compiler_gnu=yes
ac_cv_c_const=yes
ac_cv_c_inline=inline
ac_cv_c_volatile=yes
ac_cv_cxx_compiler_gnu=yes
ac_cv_define_M_PI=yes
ac_cv_env_CCC_set=
ac_cv_env_CCC_value=
ac_cv_env_CC_set=set
ac_cv_env_CC_value=/usr/local/Cellar/emscripten/1.33.0/libexec/emcc
ac_cv_env_CFLAGS_set=set
ac_cv_env_CFLAGS_value=-O2
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_CXXCPP_set=
ac_cv_env_CXXCPP_value=
ac_cv_env_CXXFLAGS_set=
ac_cv_env_CXXFLAGS_value=
ac_cv_env_CXX_set=set
ac_cv_env_CXX_value=/usr/local/Cellar/emscripten/1.33.0/libexec/em++
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_XMKMF_set=
ac_cv_env_XMKMF_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=set
ac_cv_env_host_alias_value=asmjs-unknown-emscripten
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_func__i64toa=no
ac_cv_func__ltoa=no
ac_cv_func__stricmp=no
ac_cv_func__strlwr=no
ac_cv_func__strnicmp=no
ac_cv_func__strrev=no
ac_cv_func__strupr=no
ac_cv_func__ui64toa=no
ac_cv_func__uitoa=no
ac_cv_func__ultoa=no
ac_cv_func_abs=yes
ac_cv_func_acos=yes
ac_cv_func_alloca_works=yes
ac_cv_func_asin=yes
ac_cv_func_atan2=yes
ac_cv_func_atan=yes
ac_cv_func_atof=yes
ac_cv_func_atoi=yes
ac_cv_func_bcopy=yes
ac_cv_func_calloc=yes
ac_cv_func_ceil=yes
ac_cv_func_copysign=yes
ac_cv_func_cos=yes
ac_cv_func_cosf=yes
ac_cv_func_fabs=yes
ac_cv_func_floor=yes
ac_cv_func_free=yes
ac_cv_func_fseeko64=no
ac_cv_func_fseeko=yes
ac_cv_func_getenv=yes
ac_cv_func_iconv=yes
ac_cv_func_itoa=no
ac_cv_func_log=yes
ac_cv_func_malloc=yes
ac_cv_func_memcmp_working=yes
ac_cv_func_memcpy=yes
ac_cv_func_memmove=yes
ac_cv_func_memset=yes
ac_cv_func_mprotect=yes
ac_cv_func_nanosleep=yes
ac_cv_func_pow=yes
ac_cv_func_putenv=yes
ac_cv_func_qsort=yes
ac_cv_func_realloc=yes
ac_cv_func_scalbn=yes
ac_cv_func_setenv=yes
ac_cv_func_setjmp=no
ac_cv_func_sigaction=yes
ac_cv_func_sin=yes
ac_cv_func_sinf=yes
ac_cv_func_sqrt=yes
ac_cv_func_sqrtf=yes
ac_cv_func_strcasecmp=yes
ac_cv_func_strchr=yes
ac_cv_func_strcmp=yes
ac_cv_func_strdup=yes
ac_cv_func_strlcat=yes
ac_cv_func_strlcpy=yes
ac_cv_func_strlen=yes
ac_cv_func_strncasecmp=yes
ac_cv_func_strncmp=yes
ac_cv_func_strrchr=yes
ac_cv_func_strstr=yes
ac_cv_func_strtod=yes
ac_cv_func_strtol=yes
ac_cv_func_strtoll=yes
ac_cv_func_strtoul=yes
ac_cv_func_strtoull=yes
ac_cv_func_sysconf=yes
ac_cv_func_sysctlbyname=no
ac_cv_func_tan=yes
ac_cv_func_tanf=yes
ac_cv_func_unsetenv=yes
ac_cv_func_vsnprintf=yes
ac_cv_func_vsscanf=yes
ac_cv_header_ctype_h=yes
ac_cv_header_dlfcn_h=yes
ac_cv_header_iconv_h=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_malloc_h=yes
ac_cv_header_math_h=yes
ac_cv_header_memory_h=yes
ac_cv_header_signal_h=yes
ac_cv_header_stdarg_h=yes
ac_cv_header_stdc=yes
ac_cv_header_stddef_h=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdio_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_unistd_h=yes
ac_cv_host=asmjs-unknown-emscripten
ac_cv_lib_c_dlopen=yes
ac_cv_lib_iconv_iconv_open=yes
ac_cv_lib_m_pow=yes
ac_cv_lib_rt_clock_gettime=yes
ac_cv_member_struct_sigaction_sa_sigaction=yes
ac_cv_objext=o
ac_cv_path_EGREP='/usr/bin/grep -E'
ac_cv_path_FGREP='/usr/bin/grep -F'
ac_cv_path_GREP=/usr/bin/grep
ac_cv_path_SED=/usr/bin/sed
ac_cv_path_install='/usr/bin/install -c'
ac_cv_prog_AR=/usr/local/Cellar/emscripten/1.33.0/libexec/emar
ac_cv_prog_AWK=awk
ac_cv_prog_CC=/usr/local/Cellar/emscripten/1.33.0/libexec/emcc
ac_cv_prog_CPP='/usr/local/Cellar/emscripten/1.33.0/libexec/emcc -E'
ac_cv_prog_CXXCPP='/usr/local/Cellar/emscripten/1.33.0/libexec/em++ -E'
ac_cv_prog_RANLIB=/usr/local/Cellar/emscripten/1.33.0/libexec/emranlib
ac_cv_prog_ac_ct_DUMPBIN='link -dump'
ac_cv_prog_ac_ct_STRIP=strip
ac_cv_prog_cc_c89=
ac_cv_prog_cc_g=yes
ac_cv_prog_cxx_g=yes
ac_cv_prog_make_make_set=yes
ac_cv_type_size_t=yes
ac_cv_working_alloca_h=yes
lt_cv_ar_at_file=no
lt_cv_deplibs_check_method=unknown
lt_cv_file_magic_cmd='$MAGIC_CMD'
lt_cv_file_magic_test_file=
lt_cv_ld_reload_flag=-r
lt_cv_nm_interface='BSD nm'
lt_cv_objdir=.libs
lt_cv_path_LD=/usr/local/Cellar/emscripten/1.33.0/libexec/emcc
lt_cv_path_LDCXX=/usr/local/Cellar/emscripten/1.33.0/libexec/emcc
lt_cv_path_NM=no
lt_cv_path_mainfest_tool=no
lt_cv_prog_compiler_c_o=yes
lt_cv_prog_compiler_c_o_CXX=yes
lt_cv_prog_compiler_pic='-fPIC -DPIC'
lt_cv_prog_compiler_pic_CXX='-fPIC -DPIC'
lt_cv_prog_compiler_pic_works=yes
lt_cv_prog_compiler_pic_works_CXX=yes
lt_cv_prog_compiler_rtti_exceptions=yes
lt_cv_prog_compiler_static_works=yes
lt_cv_prog_compiler_static_works_CXX=yes
lt_cv_prog_gnu_ld=no
lt_cv_prog_gnu_ldcxx=no
lt_cv_sharedlib_from_linklib_cmd='printf %s\n'
lt_cv_sys_global_symbol_pipe=
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \([^ ]*\)[ ]*$/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[BCDEGRST]* \([^ ]*\) \([^ ]*\)$/  {"\2", (void *) \&\2},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \([^ ]*\)[ ]*$/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[BCDEGRST]* \([^ ]*\) \(lib[^ ]*\)$/  {"\2", (void *) \&\2},/p'\'' -e '\''s/^[BCDEGRST]* \([^ ]*\) \([^ ]*\)$/  {"lib\2", (void *) \&\2},/p'\'''
lt_cv_sys_global_symbol_to_cdecl=
lt_cv_sys_max_cmd_len=196608
lt_cv_to_host_file_cmd=func_convert_file_noop
lt_cv_to_tool_file_cmd=func_convert_file_noop

## ----------------- ##
## Output variables. ##
## ----------------- ##

ALLOCA=''
ALSA_CFLAGS=''
ALSA_LIBS=''
AR='/usr/local/Cellar/emscripten/1.33.0/libexec/emar'
ARTSCONFIG=''
AS='as'
AWK='awk'
BUILD_CFLAGS='-O2  -DUSING_GENERATED_CONFIG_H'
BUILD_LDFLAGS=''
CC='/usr/local/Cellar/emscripten/1.33.0/libexec/emcc'
CFLAGS='-O2 -Iinclude -I/Users/kaizhu/src/sdl2/include '
CPP='/usr/local/Cellar/emscripten/1.33.0/libexec/emcc -E'
CPPFLAGS=' -Iinclude -I/Users/kaizhu/src/sdl2/include '
CXX='/usr/local/Cellar/emscripten/1.33.0/libexec/em++'
CXXCPP='/usr/local/Cellar/emscripten/1.33.0/libexec/em++ -E'
CXXFLAGS='-g -O2'
DEFS='-DHAVE_CONFIG_H'
DIRECTFBCONFIG=''
DLLTOOL='false'
DSYMUTIL=''
DUMPBIN=':'
ECHO_C='\c'
ECHO_N=''
ECHO_T=''
EGREP='/usr/bin/grep -E'
ENABLE_SHARED_FALSE=''
ENABLE_SHARED_TRUE='#'
ENABLE_STATIC_FALSE='#'
ENABLE_STATIC_TRUE=''
ESD_CFLAGS=''
ESD_CONFIG=''
ESD_LIBS=''
EXEEXT=''
EXTRA_CFLAGS='-Iinclude -I/Users/kaizhu/src/sdl2/include  -fvisibility=hidden -Wall -Wshadow'
EXTRA_LDFLAGS=' -Wl,--no-undefined -lm -liconv -lrt'
FGREP='/usr/bin/grep -F'
GREP='/usr/bin/grep'
INCLUDE='-Iinclude -I/Users/kaizhu/src/sdl2/include'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
LD='/usr/local/Cellar/emscripten/1.33.0/libexec/emcc'
LDFLAGS=' '
LIBOBJS=''
LIBS=' -lm -liconv'
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
LIPO=''
LN_S='ln -s'
LTLIBOBJS=''
LT_AGE='4'
LT_CURRENT='4'
LT_RELEASE='2.0'
LT_REVISION='0'
MANIFEST_TOOL=':'
NM='nm'
NMEDIT=''
OBJDUMP='false'
OBJECTS='$(objects)/SDL.lo $(objects)/SDL_assert.lo $(objects)/SDL_error.lo $(objects)/SDL_hints.lo $(objects)/SDL_log.lo $(objects)/SDL_atomic.lo $(objects)/SDL_spinlock.lo $(objects)/SDL_audio.lo $(objects)/SDL_audiocvt.lo $(objects)/SDL_audiodev.lo $(objects)/SDL_audiotypecvt.lo $(objects)/SDL_mixer.lo $(objects)/SDL_wave.lo $(objects)/SDL_cpuinfo.lo $(objects)/SDL_dynapi.lo $(objects)/SDL_clipboardevents.lo $(objects)/SDL_dropevents.lo $(objects)/SDL_events.lo $(objects)/SDL_gesture.lo $(objects)/SDL_keyboard.lo $(objects)/SDL_mouse.lo $(objects)/SDL_quit.lo $(objects)/SDL_touch.lo $(objects)/SDL_windowevents.lo $(objects)/SDL_rwops.lo $(objects)/SDL_haptic.lo $(objects)/SDL_gamecontroller.lo $(objects)/SDL_joystick.lo $(objects)/e_atan2.lo $(objects)/e_log.lo $(objects)/e_pow.lo $(objects)/e_rem_pio2.lo $(objects)/e_sqrt.lo $(objects)/k_cos.lo $(objects)/k_rem_pio2.lo $(objects)/k_sin.lo $(objects)/k_tan.lo $(objects)/s_atan.lo $(objects)/s_copysign.lo $(objects)/s_cos.lo $(objects)/s_fabs.lo $(objects)/s_floor.lo $(objects)/s_scalbn.lo $(objects)/s_sin.lo $(objects)/s_tan.lo $(objects)/SDL_power.lo $(objects)/SDL_d3dmath.lo $(objects)/SDL_render.lo $(objects)/SDL_yuv_mmx.lo $(objects)/SDL_yuv_sw.lo $(objects)/SDL_render_d3d.lo $(objects)/SDL_render_d3d11.lo $(objects)/SDL_render_gl.lo $(objects)/SDL_shaders_gl.lo $(objects)/SDL_render_gles.lo $(objects)/SDL_render_gles2.lo $(objects)/SDL_shaders_gles2.lo $(objects)/SDL_render_psp.lo $(objects)/SDL_blendfillrect.lo $(objects)/SDL_blendline.lo $(objects)/SDL_blendpoint.lo $(objects)/SDL_drawline.lo $(objects)/SDL_drawpoint.lo $(objects)/SDL_render_sw.lo $(objects)/SDL_rotate.lo $(objects)/SDL_getenv.lo $(objects)/SDL_iconv.lo $(objects)/SDL_malloc.lo $(objects)/SDL_qsort.lo $(objects)/SDL_stdlib.lo $(objects)/SDL_string.lo $(objects)/SDL_thread.lo $(objects)/SDL_timer.lo $(objects)/SDL_RLEaccel.lo $(objects)/SDL_blit.lo $(objects)/SDL_blit_0.lo $(objects)/SDL_blit_1.lo $(objects)/SDL_blit_A.lo $(objects)/SDL_blit_N.lo $(objects)/SDL_blit_auto.lo $(objects)/SDL_blit_copy.lo $(objects)/SDL_blit_slow.lo $(objects)/SDL_bmp.lo $(objects)/SDL_clipboard.lo $(objects)/SDL_egl.lo $(objects)/SDL_fillrect.lo $(objects)/SDL_pixels.lo $(objects)/SDL_rect.lo $(objects)/SDL_shape.lo $(objects)/SDL_stretch.lo $(objects)/SDL_surface.lo $(objects)/SDL_video.lo $(objects)/SDL_emscriptenevents.lo $(objects)/SDL_emscriptenframebuffer.lo $(objects)/SDL_emscriptenmouse.lo $(objects)/SDL_emscriptenopengles.lo $(objects)/SDL_emscriptenvideo.lo $(objects)/SDL_emscriptenaudio.lo $(objects)/SDL_nullevents.lo $(objects)/SDL_nullframebuffer.lo $(objects)/SDL_nullvideo.lo $(objects)/SDL_diskaudio.lo $(objects)/SDL_dummyaudio.lo $(objects)/SDL_sysloadso.lo $(objects)/SDL_syspower.lo $(objects)/SDL_sysjoystick.lo $(objects)/SDL_sysfilesystem.lo $(objects)/SDL_systimer.lo $(objects)/SDL_syshaptic.lo $(objects)/SDL_syscond.lo $(objects)/SDL_sysmutex.lo $(objects)/SDL_syssem.lo $(objects)/SDL_systhread.lo $(objects)/SDL_systls.lo'
OBJEXT='o'
OTOOL64=''
OTOOL=''
PACKAGE_BUGREPORT=''
PACKAGE_NAME=''
PACKAGE_STRING=''
PACKAGE_TARNAME=''
PACKAGE_URL=''
PACKAGE_VERSION=''
PATH_SEPARATOR=':'
PKG_CONFIG=''
POW_LIB=''
RANLIB='/usr/local/Cellar/emscripten/1.33.0/libexec/emranlib'
SDLMAIN_OBJECTS='$(objects)/SDL_dummy_main.o'
SDLTEST_OBJECTS='$(objects)/SDL_test_assert.o $(objects)/SDL_test_common.o $(objects)/SDL_test_compare.o $(objects)/SDL_test_crc32.o $(objects)/SDL_test_font.o $(objects)/SDL_test_fuzzer.o $(objects)/SDL_test_harness.o $(objects)/SDL_test_imageBlit.o $(objects)/SDL_test_imageBlitBlend.o $(objects)/SDL_test_imageFace.o $(objects)/SDL_test_imagePrimitives.o $(objects)/SDL_test_imagePrimitivesBlend.o $(objects)/SDL_test_log.o $(objects)/SDL_test_md5.o $(objects)/SDL_test_random.o'
SDL_BINARY_AGE='4'
SDL_CFLAGS=''
SDL_INTERFACE_AGE='0'
SDL_LIBS='-lSDL2 '
SDL_MAJOR_VERSION='2'
SDL_MICRO_VERSION='4'
SDL_MINOR_VERSION='0'
SDL_RLD_FLAGS=''
SDL_STATIC_LIBS='-lSDL2   -Wl,--no-undefined -lm -liconv -lrt'
SDL_VERSION='2.0.4'
SED='/usr/bin/sed'
SET_MAKE=''
SHELL='/bin/sh'
STRIP='strip'
VERSION_OBJECTS=''
WINDRES=':'
XMKMF=''
X_CFLAGS=''
X_EXTRA_LIBS=''
X_LIBS=''
X_PRE_LIBS=''
ac_aux_dir='build-scripts'
ac_ct_AR=''
ac_ct_CC=''
ac_ct_CXX=''
ac_ct_DUMPBIN='link -dump'
bindir='${exec_prefix}/bin'
build='x86_64-apple-darwin13.4.0'
build_alias=''
build_cpu='x86_64'
build_os='darwin13.4.0'
build_vendor='apple'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host='asmjs-unknown-emscripten'
host_alias='asmjs-unknown-emscripten'
host_cpu='asmjs'
host_os='emscripten'
host_vendor='unknown'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/usr/local'
program_transform_name='s,x,x,'
psdir='${docdir}'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME ""
#define PACKAGE_TARNAME ""
#define PACKAGE_VERSION ""
#define PACKAGE_STRING ""
#define PACKAGE_BUGREPORT ""
#define PACKAGE_URL ""
#define STDC_HEADERS 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_MEMORY_H 1
#define HAVE_STRINGS_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_UNISTD_H 1
#define HAVE_DLFCN_H 1
#define LT_OBJDIR ".libs/"
#define HAVE_LIBC 1
#define STDC_HEADERS 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_STDIO_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STDDEF_H 1
#define HAVE_STDARG_H 1
#define HAVE_MALLOC_H 1
#define HAVE_MEMORY_H 1
#define HAVE_STRING_H 1
#define HAVE_STRINGS_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_CTYPE_H 1
#define HAVE_MATH_H 1
#define HAVE_ICONV_H 1
#define HAVE_SIGNAL_H 1
#define HAVE_M_PI /**/
#define HAVE_ALLOCA_H 1
#define HAVE_ALLOCA 1
#define HAVE_MEMCMP 1
#define HAVE_STRTOD 1
#define HAVE_MPROTECT 1
#define HAVE_MALLOC 1
#define HAVE_CALLOC 1
#define HAVE_REALLOC 1
#define HAVE_FREE 1
#define HAVE_GETENV 1
#define HAVE_SETENV 1
#define HAVE_PUTENV 1
#define HAVE_UNSETENV 1
#define HAVE_QSORT 1
#define HAVE_ABS 1
#define HAVE_BCOPY 1
#define HAVE_MEMSET 1
#define HAVE_MEMCPY 1
#define HAVE_MEMMOVE 1
#define HAVE_STRLEN 1
#define HAVE_STRLCPY 1
#define HAVE_STRLCAT 1
#define HAVE_STRDUP 1
#define HAVE_STRCHR 1
#define HAVE_STRRCHR 1
#define HAVE_STRSTR 1
#define HAVE_STRTOL 1
#define HAVE_STRTOUL 1
#define HAVE_STRTOLL 1
#define HAVE_STRTOULL 1
#define HAVE_ATOI 1
#define HAVE_ATOF 1
#define HAVE_STRCMP 1
#define HAVE_STRNCMP 1
#define HAVE_STRCASECMP 1
#define HAVE_STRNCASECMP 1
#define HAVE_VSSCANF 1
#define HAVE_VSNPRINTF 1
#define HAVE_FSEEKO 1
#define HAVE_SIGACTION 1
#define HAVE_NANOSLEEP 1
#define HAVE_SYSCONF 1
#define HAVE_ATAN 1
#define HAVE_ATAN2 1
#define HAVE_ACOS 1
#define HAVE_ASIN 1
#define HAVE_CEIL 1
#define HAVE_COPYSIGN 1
#define HAVE_COS 1
#define HAVE_COSF 1
#define HAVE_FABS 1
#define HAVE_FLOOR 1
#define HAVE_LOG 1
#define HAVE_POW 1
#define HAVE_SCALBN 1
#define HAVE_SIN 1
#define HAVE_SINF 1
#define HAVE_SQRT 1
#define HAVE_SQRTF 1
#define HAVE_TAN 1
#define HAVE_TANF 1
#define HAVE_ICONV 1
#define HAVE_SA_SIGACTION 1
#define HAVE_GCC_ATOMICS 1
#define SDL_THREADS_DISABLED 1
#define SDL_CPUINFO_DISABLED 1
#define SDL_VIDEO_DRIVER_EMSCRIPTEN 1
#define SDL_AUDIO_DRIVER_EMSCRIPTEN 1
#define SDL_VIDEO_DRIVER_DUMMY 1
#define SDL_AUDIO_DRIVER_DISK 1
#define SDL_AUDIO_DRIVER_DUMMY 1
#define SDL_LOADSO_DLOPEN 1
#define HAVE_CLOCK_GETTIME 1
#define SDL_VIDEO_OPENGL_EGL 1
#define SDL_VIDEO_OPENGL_ES2 1
#define SDL_VIDEO_RENDER_OGL_ES2 1
#define SDL_POWER_EMSCRIPTEN 1
#define SDL_JOYSTICK_EMSCRIPTEN 1
#define SDL_FILESYSTEM_EMSCRIPTEN 1
#define SDL_TIMER_UNIX 1
#define SDL_HAPTIC_DISABLED 1

configure: exit 0
